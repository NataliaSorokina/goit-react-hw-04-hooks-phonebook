{"version":3,"sources":["App.styled.js","components/Section/Section.styled.js","components/Section/Section.js","components/ContactForm/ContactForm.styled.js","components/Button/Button.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["MainTitle","styled","h1","MinorTitle","h2","Section","title","children","Form","form","Label","label","Input","input","Button","button","SubmitForm","onSubmit","useState","name","setName","number","setNumber","handleInputChange","event","target","value","reset","preventDefault","htmlFor","type","onChange","pattern","required","List","ul","ListItem","li","ContactList","contacts","onDeleteContact","map","contact","onClick","id","FilterLabel","FilterInput","Filter","CreateApp","setContacts","filter","setFilter","useEffect","savedContacts","JSON","parse","window","localStorage","getItem","setItem","stringify","filteredContacts","normilizedFilter","toLowerCase","record","includes","getfilteredContacts","data","newContact","uuidv4","some","alert","currentTarget","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f23a87cf.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainTitle = styled.h1`\n  font-weight: 700;\n  font-size: 32px;\n  text-align: center;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n`;\n","import styled from '@emotion/styled';\n\nexport const MinorTitle = styled.h2`\n  margin: 0;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 26px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MinorTitle } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <MinorTitle>{title}</MinorTitle>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  font-size: 18px;\n  margin: 10px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  margin-left: 10px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  width: auto;\n  height: 40px;\n  font-weight: normal;\n  font-size: 16px;\n  margin: 20px;\n  padding: 10px 20px;\n  color: #fff;\n  background-color: dodgerblue;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 5px;\n  border: none;\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(39, 24, 245);\n  }\n`;\n","import { useState } from 'react';\nimport { Form, Label, Input } from './ContactForm.styled';\nimport { Button } from 'components/Button/Button.styled';\n\nexport default function SubmitForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например, Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label htmlFor=\"number\">\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 15px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-basis: 1/3;\n  width: 30%;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px 20px;\n  font-weight: 500;\n  font-size: 18px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List, ListItem } from 'components/ContactList/ContactList.styled';\nimport { Button } from 'components/Button/Button.styled';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <List>\n    {contacts.map(contact => (\n      <ListItem key={contact.id}>\n        {contact.name}: {contact.number}\n        <Button type=\"button\" onClick={() => onDeleteContact(contact.id)}>\n          Delete\n        </Button>\n      </ListItem>\n    ))}\n  </List>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-weight: 400;\n  font-size: 18px;\n  margin-top: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  margin-top: 10px;\n  padding: 4px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = ({ value, onChange }) => (\n  <FilterLabel>\n    Find contacts by name{' '}\n    <FilterInput type=\"text\" value={value} onChange={onChange} />\n  </FilterLabel>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { MainTitle } from './App.styled';\nimport Section from 'components/Section/Section';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport default function CreateApp() {\n  // const [contacts, setContacts] = useState(\n  //   JSON.parse(window.localStorage.getItem('contacts') ?? []),\n  // );\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  const formSubmitHandler = data => {\n    const { name, number } = data;\n    const newContact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    if (contacts.some(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    } else {\n      setContacts([...contacts, newContact]);\n    }\n  };\n\n  const filterChangeHandler = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const getfilteredContacts = () => {\n    const normilizedFilter = filter.toLowerCase();\n\n    return contacts.filter(record =>\n      record.name.toLowerCase().includes(normilizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  useEffect(() => {\n    const savedContacts = JSON.parse(window.localStorage.getItem('contacts'));\n    savedContacts && setContacts(savedContacts);\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const filteredContacts = getfilteredContacts();\n\n  return (\n    <>\n      <MainTitle>Phonebook</MainTitle>\n\n      <ContactForm onSubmit={formSubmitHandler} />\n\n      <Section title=\"Contacts\">\n        <Filter value={filter} onChange={filterChangeHandler} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={deleteContact}\n        />\n      </Section>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}